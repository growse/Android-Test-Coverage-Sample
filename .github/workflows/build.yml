---
# Builds, tests and publishes the output to the Play store internal track.
name: Build & Espresso Test

"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: |
          ./gradlew \
          assembleDebug \
          assembleRelease \
          assembleAndroidTest \
          assembleReleaseUnitTest \
          :app:compileReleaseSources \
          :app:packageReleaseBundle \
          lint \
          app:createDebugUnitTestCoverageReport \
          :app:assembleDebugAndroidTest --scan --stacktrace
        timeout-minutes: 10

      - name: Unit JUnit Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "**/build/test-results/test*UnitTest/TEST-*.xml"

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./app/build/reports/coverage/test/debug/report.xml
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload lint result artifact
        uses: actions/upload-artifact@v3
        with:
          name: lint report
          path: app/build/reports/lint-results-debug.html
        if: always()

  espresso-test:
    name: "Espresso test"
    runs-on: self-hosted
    needs: build
    strategy:
      matrix:
        android-api: [33]
    steps:
      - run: ls -laht /dev/kvm
      - run: echo "/android-sdk/platform-tools/" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      # - name: Gradle cache
      #   uses: gradle/gradle-build-action@v2

      # - name: AVD cache
      #   uses: actions/cache@v3
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-${{ matrix.android-api }}

      - run: export

      # - name: create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ matrix.android-api }}
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
      #     profile: pixel_3a
      #     target: google_apis
      #     ram-size: 6000M
      #     disable-animations: true
      #     arch: x86_64
      #     sdcard-path-or-size: 1000M
      #     emulator-build: 9936625
      #     script: echo "Generated AVD snapshot for caching."

      - name: Espresso Test
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 20
        with:
          api-level: ${{ matrix.android-api }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          profile: pixel_3a
          target: google_apis
          ram-size: 6000M
          disable-animations: true
          arch: x86_64
          sdcard-path-or-size: 1000M
          emulator-build: 9936625
          script: |
            adb shell settings put global bluetooth_on 0
            adb shell rm -rf /sdcard/googletest || echo "Couldn't delete googletest folder"
            adb uninstall com.example.testcoveragesample || echo "com.example.testcoveragesample not installed"
            adb uninstall com.example.testcoveragesample.test || echo "com.example.testcoveragesample.test not installed"
            adb logcat -c
            adb logcat > emulator.log & echo $! > logcat_file.pid
            adb logcat "*:S MonitoringInstr:V AndroidJUnitRunner:V TestRequestBuilder:V TestExecutor:V TestRunner:V" --format=color & echo $! > logcat_console.pid
            echo 0 > gradle.exit # Set a default exit code.
            ./gradlew createDebugCoverageReport --max-workers=1 --stacktrace --scan || echo $? > gradle.exit
            # Stop capturing logcat output.
            kill $(cat logcat_file.pid)    || echo "::warning file=.github/workflows/ci.yml::Logcat process $(cat logcat_file.pid) didn't exist."
            kill $(cat logcat_console.pid) || echo "::warning file=.github/workflows/ci.yml::Logcat process $(cat logcat_console.pid) didn't exist."
            adb logcat -d --buffer=crash --format=color
            exit $(cat gradle.exit)


      - run: find $ANDROID_USER_HOME || "not found"
      - name: Upload connected test result artifact
        uses: actions/upload-artifact@v3
        with:
          name: espresso-test-reports-${{ matrix.android-api }}
          path: app/build/reports/androidTests/connected/
        if: always()
      - name: Upload connected test XML
        uses: actions/upload-artifact@v3
        with:
          name: espresso-test-xml-${{ matrix.android-api }}
          path: app/build/outputs/androidTest-results/connected/*.xml
      - name: Espresso JUnit Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: app/build/outputs/androidTest-results/connected/*.xml
      - name: Upload connected test coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: espresso-test-coverage-${{ matrix.android-api }}
          path: app/build/reports/coverage/androidTest/debug/
        if: always()
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: app/build/reports/coverage/androidTest/debug/connected/report.xml
          flags: espressotests
          token: ${{ secrets.CODECOV_TOKEN }}
