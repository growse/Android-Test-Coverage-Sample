---
# Builds, tests and publishes the output to the Play store internal track.
name: Build & Espresso Test

"on":
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.configuration-cache=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs='-Xmx3096M -Dkotlin.daemon.jvm.options=-Xmx2048M -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:+UseParallelGC'"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Gradle setup
        uses: gradle/gradle-build-action@29c0906b64b8fc82467890bfb7a0a7ef34bda89e # v3
        with:
          dependency-graph: generate-and-submit
          cache-read-only: ${{ github.ref != format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Gradle build
        run: |
          ./gradlew \
          assembleDebug \
          assembleRelease \
          lint \
          app:createDebugUnitTestCoverageReport \
          :app:packageDebugAndroidTest \
          :app:packageDebug \
          :app:compileDebugAndroidTestKotlin \
          :app:compileDebugAndroidTestJavaWithJavac \
          --scan --stacktrace
        timeout-minutes: 10

      - name: Unit JUnit Report
        uses: mikepenz/action-junit-report@9379f0ccddcab154835d4e2487555ee79614fe95 # v4
        if: always()
        with:
          report_paths: "**/TEST-*.xml"
          detailed_summary: true
          include_passed: true

      - name: Upload coverage
        if: ${{ (github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)) }}
        uses: codecov/codecov-action@7afa10ed9b269c561c2336fd862446844e0cbf71 # v4
        with:
          files: ./app/build/reports/coverage/test/debug/report.xml
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true

      - name: Upload lint result artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: lint report
          path: app/build/reports/lint-results-debug.html
        if: always()

  espresso-test:
    name: "Espresso test"
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        android-api: [34, 24, 21]
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Gradle setup
        uses: gradle/gradle-build-action@29c0906b64b8fc82467890bfb7a0a7ef34bda89e # v3
        with:
          cache-read-only: true
          dependency-graph: generate
        timeout-minutes: 10

      - name: AVD cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.android-api }}

      - name: Create AVD and generate snapshot for caching
        uses: reactivecircus/android-emulator-runner@6b0df4b0efb23bb0ec63d881db79aefbc976e4b2 # v2
        if: steps.avd-cache.outputs.cache-hit != 'true'
        with:
          api-level: ${{ matrix.android-api }}
          force-avd-creation: false
          emulator-options: -no-window -gpu auto -noaudio -no-boot-anim -camera-back none -camera-front none
          profile: pixel_3a
          target: google_apis
          ram-size: 4000M
          avd-name: test-${{ matrix.android-api }}
          disable-animations: true
          arch: x86_64
          cores: 1
          sdcard-path-or-size: 1000M
          script: |
            echo "Created AVD snapshot"

      - name: Espresso Test
        uses: reactivecircus/android-emulator-runner@6b0df4b0efb23bb0ec63d881db79aefbc976e4b2 # v2
        timeout-minutes: 20
        with:
          api-level: ${{ matrix.android-api }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu auto -noaudio -no-boot-anim -camera-back none -camera-front none
          profile: pixel_3a
          target: google_apis
          ram-size: 4000M
          avd-name: test-${{ matrix.android-api }}
          disable-animations: true
          arch: x86_64
          cores: 1
          sdcard-path-or-size: 1000M
          script: |
            adb shell settings put global bluetooth_on 0
            adb shell rm -rf /sdcard/googletest || echo "Couldn't delete googletest folder"
            adb uninstall com.example.testcoveragesample || echo "com.example.testcoveragesample not installed"
            adb uninstall com.example.testcoveragesample.test || echo "com.example.testcoveragesample.test not installed"
            ./gradlew createDebugCoverageReport --max-workers=1 --stacktrace --scan

      - name: Upload connected test result artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: espresso-test-reports-${{ matrix.android-api }}
          path: app/build/reports/androidTests/connected/
        if: always()

      - name: Espresso JUnit Report
        uses: mikepenz/action-junit-report@9379f0ccddcab154835d4e2487555ee79614fe95 # v4
        if: always()
        with:
          report_paths: "**/TEST-*.xml"
          detailed_summary: true
          include_passed: true

      - name: Upload connected test coverage artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: espresso-test-coverage-${{ matrix.android-api }}
          path: app/build/reports/coverage/androidTest/debug/
        if: always()
      - name: Upload coverage
        if: ${{ (github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)) }}
        uses: codecov/codecov-action@7afa10ed9b269c561c2336fd862446844e0cbf71 # v4
        with:
          files: app/build/reports/coverage/androidTest/debug/connected/report.xml
          flags: espressotests
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true
